{"version":3,"file":"static/css/main.bc4c4eb5.css","mappings":"AACA,EAGE,sBACA,sGAHA,SACA,SAEA,CAKF,UACE,kBACA,2BAGF,KAKE,yBADA,WAFA,aACA,aAFA,iBAIA,CAEA,uBAKE,yBACA,kBAFA,YAHA,kBACA,MACA,SAGA,CC5BJ,UACE,yBACA,gBAEA,aACE,aACA,sBACA,gBAEA,4BAKE,WAJA,aACA,eACA,6BACA,gBACA,CAIF,iBAEE,eADA,iBACA,CAGF,uBAOE,kBACA,WAJA,aAEA,YAHA,UAFA,kBACA,SAOA,wDAJA,UAIA,CAGF,4BAEE,sBADA,aACA,CAGF,8BAEE,yBADA,aACA,CAGF,yBAEE,yBADA,aACA,CAIJ,wBAIE,YACA,eAAc,CAFd,YAFA,SACA,WAGA,CAGF,4CAEE,kBACA,eAFA,YAGA,yBC5DJ,aAIE,eADA,YAEA,gBAHA,YADA,iBAIA,CAEA,kBACE,cACA,aAGA,gBAFA,uBACA,kBACA,CAIJ,mBACE,yBAGF,oBACE,yBAGF,SACE,yBAIF,mBAQE,WAJA,aAEA,YAHA,WAFA,kBACA,UAKA,wDAFA,UAGA,CAGF,eAEE,sBADA,aACA,CAGF,iBAEE,yBADA,aACA,CAGF,YAEE,yBADA,aACA,CCtDA,cAME,yBACA,YAFA,cAJA,cAGA,YAFA,YACA,UAIA,CCRJ,cAOE,6BACA,yBACA,kBAJA,cAKA,eATA,cACA,YAEA,gBADA,aAGA,wBAIA,CAGF,oBACE,yBAGF,qBAEE,yBADA,UACA,CCnBF,kBAGE,yBADA,gBADA,YAEA,CAEA,mDAEE,yBACA,yBAFA,UAEA,CAGF,uBAGE,mBAFA,aACA,sBAIA,YADA,gBADA,eAEA,CAGF,6BAME,eALA,cAGA,oBAFA,kBAGA,yBAFA,SAGA,CAEA,mCACE,cAGA,WAFA,aACA,UACA,CAIJ,4BAME,eALA,cAGA,oBADA,YAEA,yBAHA,SAIA,CAEA,qCACE,cAGA,WAFA,aAGA,YAFA,UAEA,CAIJ,4BACE,aACA,eACA,8BACA,UAEA,oCAGE,mBAFA,aACA,cACA,CAEA,0CAIE,eAFA,YACA,iBAFA,iBAGA,CAGA,gDAKE,wCADA,YADA,SAFA,gBACA,OAGA,CAKJ,gDAWE,sBACA,iBACA,kBACA,WACA,eAXA,cAEA,YAHA,OAFA,kBACA,QAKA,mCAGA,2BALA,UAUA,CAIF,8DACE,sBAEA,wBACA,4BAFA,mBAEA,CAIF,sEACE,uLAOF,yEACE,0LAYA,oEAMF,yaCvIN,cAME,mCADA,aAFA,OAFA,eACA,MAEA,WAEA,CAEA,mBAWE,oCACA,oCATA,SACA,aACA,sBACA,YAGA,gBACA,gBAHA,gBANA,wCACA,UAMA,WAIA,CAEA,qDAEE,yBACA,yBAFA,UAEA,CAGF,8BAKE,eAJA,cAEA,oBADA,kBAEA,wBACA,CAEA,oCACE,cAGA,WAFA,aACA,UACA,CAIJ,6BAKE,eAJA,cAEA,oBADA,YAEA,wBACA,CAEA,sCACE,cAGA,WAFA,aAGA,YAFA,UAEA,CAIJ,6BACE,aACA,yBAEA,sCACE,aACA,eACA","sources":["App.scss","Components/TodoList/TodoList.scss","Components/ListElement/ListElement.scss","Components/Search/Search.scss","Components/UI/CustomButton/CustomButton.scss","Components/EditingInterface/EditingInterface.scss","Components/AddTaskModal/AddTaskModal.scss"],"sourcesContent":["// Сброс глобальных стилей, которые чаще всего будут мешать.\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: -apple-system, BlinkMacSystemFont, Roboto, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji';\n}\n\n// Отключение эластичности скролла, без него граница списка задачи и фон модального окна выглядят более органично.\n// Можно решить с помощью дизайнерских хитростей, когда эластичный скролл органично продолжает страницу.\nhtml, body {\n  overflow-y: hidden;\n  overscroll-behavior-y: none;\n}\n\n.App {\n  position: relative;\n  display: grid;\n  height: 100vh;\n  color: white;\n  background-color: #181818;\n\n  .widthManipulator {\n    position: absolute;\n    top: 0;\n    width: 2px;\n    height: 100%;\n    background-color: #181818;\n    cursor: col-resize;\n  }\n}",".TodoList {\n  background-color: #212121;\n  overflow-y: auto;\n\n  ul {\n    display: flex;\n    flex-direction: column;\n    list-style: none;\n\n    .legendElement {\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: space-around;\n      padding: 0.5em 1em;\n      color: gray;\n    }\n\n    //Сделано так на случай, если будут добавляться новые состояния, можно будет для них просто прописать цвет.\n    div {\n      position: relative;\n      font-size: 0.6em;\n    }\n\n    div::after {\n      position: absolute;\n      top: 0.2em;\n      left: -1em;\n      display: none;\n      width: 0.8em;\n      height: 0.8em;\n      border-radius: 50%;\n      content: '';\n      transform: rotate(45deg);\n    }\n\n    .waiting::after {\n      display: block;\n      background-color: lightslategray;\n    }\n\n    .inProcess::after {\n      display: block;\n      background-color: cornflowerblue;\n    }\n\n    .done::after {\n      display: block;\n      background-color: #00c200;\n    }\n  }\n\n  .CustomButton {\n    margin: 0;\n    padding: 1em;\n    height: 50px;\n    border: none;\n    border-radius: 0;\n  }\n\n  .searchFail, .tasksEmpty {\n    padding: 1em;\n    align-self: center;\n    font-size: 0.9em;\n    text-transform: uppercase;\n  }\n}\n\n\n","// С точки зрения сементики можно вложить кнопки в элементы списка\n// или стилизовать элемент  списка под кнопку, второй вариант мне кажется более удобным,\n// плюс не нужно дополнительно при нажатии на кнопку убирать ее поведение по умолчанию.\n.ListElement {\n  position: relative;\n  padding: 1em;\n  height: 50px;\n  cursor: pointer;\n  overflow: hidden;\n\n  span {\n    display: block;\n    height: 1.2em;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n.ListElement:hover {\n  background-color: #383838;\n}\n\n.ListElement:active {\n  background-color: #767676;\n}\n\n.current {\n  background-color: #383838;\n}\n\n// Сделано так на случай, если будут добавляться новые состояния, можно будет для них просто прописать цвет.\n.ListElement::after {\n  position: absolute;\n  top: -10px;\n  left: -10px;\n  display: none;\n  width: 20px;\n  height: 20px;\n  transform: rotate(45deg);\n  content: '';\n}\n\n.waiting::after {\n  display: block;\n  background-color: lightslategray;\n}\n\n.inProcess::after {\n  display: block;\n  background-color: cornflowerblue;\n}\n\n.done::after {\n  display: block;\n  background-color: #00c200;\n}\n\n",".Search {\n  input {\n    display: block;\n    padding: 1em;\n    width: 100%;\n    height: 45px;\n    color: hsl(120deg 0 53%);\n    background-color: #121212;\n    border: none;\n  }\n}",".CustomButton {\n  display: block;\n  margin: 0.5em;\n  padding: 0.5em;\n  min-width: 150px;\n  color: hsl(120deg 0 53%);\n  text-transform: uppercase;\n  background-color: transparent;\n  border: 1px solid hsl(0deg 0 19%);\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.CustomButton:hover {\n  background-color: #383838;\n}\n\n.CustomButton:active {\n  color: white;\n  background-color: #767676;\n}",".EditingInterface {\n  padding: 0.5em;\n  min-width: 500px;\n  background-color: #181818;\n\n  input, textarea {\n    color: white;\n    background-color: #121212;\n    border: 1px solid hsl(0 0 19%);\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-top: 2em;\n    min-width: 250px;\n    height: 100%;\n  }\n\n  .textTitle {\n    display: block;\n    margin-bottom: 1em;\n    width: 60%;\n    font-weight: lighter;\n    text-transform: uppercase;\n    cursor: pointer;\n\n    input {\n      display: block;\n      padding: 0.5em;\n      width: 100%;\n      height: 65%;\n    }\n  }\n\n  .textBody {\n    display: block;\n    width: 60%;\n    height: 15em;\n    font-weight: lighter;\n    text-transform: uppercase;\n    cursor: pointer;\n\n    textarea {\n      display: block;\n      padding: 0.5em;\n      width: 100%;\n      height: 90%;\n      resize: none;\n    }\n  }\n\n  .controls {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    width: 60%;\n\n    .radios {\n      display: flex;\n      flex-wrap: wrap;\n      align-items: center;\n\n      label {\n        position: relative;\n        margin: 0.5em;\n        padding-left: 1em;\n        cursor: pointer;\n\n        // Дефолтные радиокнопки, вместо них будут кастомные.\n        input {\n          position: initial;\n          width: 0;\n          height: 0;\n          border: none;\n          appearance: none;\n        }\n      }\n\n      // Кастомные радиокнопки.\n      input::after {\n        position: absolute;\n        top: 50%;\n        left: 0;\n        display: block;\n        width: 10px;\n        height: 10px;\n        -webkit-transform: translateY(-50%);\n        -moz-transform: translateY(-50%);\n        -ms-transform: translateY(-50%);\n        transform: translateY(-50%);\n        background-color: white;\n        border: 2px solid;\n        border-radius: 50%;\n        content: '';\n        cursor: pointer;\n      }\n\n      // Общие стили для выбранной радиокнопки.\n      label > input:checked::after {\n        background-color: white;\n        background-size: 90%;\n        background-position: center;\n        background-repeat: no-repeat;\n      }\n\n      // Вид радиокнопок в зависимости от того, к какому состоянию они относятся.\n      label.waiting > input:checked::after {\n        background-image: url('data:image/svg+xml,%3Csvg viewBox=\\'0 0 120 120\\' fill=\\'lightslategray\\' xmlns=\\'http://www.w3.org/2000/svg\\'%3E%3Ccircle cx=\\'60\\' cy=\\'60\\' r=\\'50\\'/%3E%3C/svg%3E');\n      }\n\n      label.inProcess > input:checked::after {\n        background-image: url('data:image/svg+xml,%3Csvg viewBox=\\'0 0 120 120\\' fill=\\'cornflowerblue\\' xmlns=\\'http://www.w3.org/2000/svg\\'%3E%3Ccircle cx=\\'60\\' cy=\\'60\\' r=\\'50\\'/%3E%3C/svg%3E');\n      }\n\n      label.done > input:checked::after {\n        background-image: url('data:image/svg+xml,%3Csvg viewBox=\\'0 0 120 120\\' fill=\\'%2300c200\\' xmlns=\\'http://www.w3.org/2000/svg\\'%3E%3Ccircle cx=\\'60\\' cy=\\'60\\' r=\\'50\\'/%3E%3C/svg%3E');\n      }\n\n      .waiting {\n        color: lightslategray;\n      }\n\n      .inProcess {\n        color: cornflowerblue;\n      }\n\n      .done {\n        color: #00c200;\n      }\n    }\n\n    .buttons {\n      display: flex;\n      flex-wrap: wrap;\n    }\n  }\n}",".AddTaskModal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(128, 128, 128, 0.5);\n\n  form {\n    position: sticky;\n    top: 120px;\n    bottom: 0;\n    display: flex;\n    flex-direction: column;\n    margin: auto;\n    padding: 1em 2em;\n    width: 500px;\n    max-width: 100vw;\n    min-height: 30vh;\n    background-color: rgb(33 33 33 / 98%);\n    border: 1px solid rgb(255 255 255 / 10%);\n\n    input, textarea {\n      color: white;\n      background-color: #121212;\n      border: 1px solid hsl(0 0 19%);\n    }\n\n    .textTitle {\n      display: block;\n      margin-bottom: 1em;\n      font-weight: lighter;\n      text-transform: uppercase;\n      cursor: pointer;\n\n      input {\n        display: block;\n        padding: 0.5em;\n        width: 100%;\n        height: 65%;\n      }\n    }\n\n    .textBody {\n      display: block;\n      height: 15em;\n      font-weight: lighter;\n      text-transform: uppercase;\n      cursor: pointer;\n\n      textarea {\n        display: block;\n        padding: 0.5em;\n        width: 100%;\n        height: 90%;\n        resize: none;\n      }\n    }\n\n    .controls {\n      display: flex;\n      justify-content: flex-end;\n\n      .buttons {\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: flex-end;\n      }\n    }\n  }\n}"],"names":[],"sourceRoot":""}